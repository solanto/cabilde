import Head from "next/head"
import Script from 'next/script'
import { Table, Search, TextInput, ButtonGroup, Button } from "@trussworks/react-uswds"
import TableRow from "../../components/table-row"
import Link from "../../components/link"
import { iniciativas } from "../../data/gov"
import date, { fullDate } from "../../lib/date"
import { useRouter } from 'next/router'
import renderExpediente, { slugifyExpediente, labelExpediente } from "../../lib/render-expediente"
import { toStyleKey, voteCounts, votePercents, votingStatus } from "../../lib/votes"
import VoteStat from "../../components/vote-stat"

const Representantes = () => {
    const router = useRouter()
    const { search: searchQuery } = router.query

    const searchPlaceholder = "Busca tu representante"

    return (
        <div>
            <Head>
                <title>Representantes | Cabilde</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Search size="big"
                placeholder={searchQuery || searchPlaceholder}
                label="Buscar"
                i18n={{
                    buttonText: "Buscar",

                }} />
            <Table caption={"This is a striped table"}
                stackedStyle="headers"
                scrollable
                fullWidth>
                <thead>
                    <TableRow head-section items={[
                        { body: "Asunto" },
                        { body: "Expediente" },
                        { body: "Fecha iniciada" },
                        { body: "Fecha radicada" },
                        { body: "VotaciÃ³n a favor" }
                    ]} />
                </thead>
                <tbody>
                    {iniciativas
                        // .filter(inic => query == undefined
                        //     || RegExp(searchQuery, "i").test(JSON.stringify(inic))
                        // )
                        // TODO: search function
                        .map(({ expediente, asunto, fecha, votacion, mayoriaEspecial }, index) => {
                            const votes = voteCounts(votacion)
                            const statusFlag = votingStatus(votes, mayoriaEspecial)
                            let status

                            if (["aprobada", "rechazada"].includes(statusFlag)) {
                                status = <VoteStat styleKey={toStyleKey(statusFlag)}>
                                    {votePercents(votes).aFavor}%
                                </VoteStat>

                            } else {
                                status = <VoteStat asCustom="span">pendiente</VoteStat>
                            }

                            return (
                                <TableRow key={index} items={[
                                    {
                                        body:
                                            <Link
                                                href={`/votaciones-iniciativas/${slugifyExpediente(expediente)}`}
                                            >
                                                {asunto}
                                            </Link>
                                    },
                                    {
                                        body: renderExpediente(expediente),
                                        "aria-label": labelExpediente(expediente)
                                    },
                                    {
                                        body: date(fecha.iniciada),
                                        "aria-label": fullDate(fecha.iniciada)
                                    },
                                    {
                                        body: date(fecha.radicada),
                                        "aria-label": fullDate(fecha.radicada)
                                    },
                                    {
                                        body: status
                                    }
                                ]} />
                            )
                            
                        })
                    }
                </tbody>
            </Table>

            <Script>
                {`
                    (() => {
                        const params = new URLSearchParams(window.location.search)
                        const searchbar = document.getElementById("search-field")

                        if (params.has("search")) {
                            searchbar.setAttribute("value", params.get("search"))
                            searchbar.setAttribute("placeholder", "${searchPlaceholder}")
                        }
                    })()
                `}
            </Script>
        </div>
    )
}

export default Representantes
